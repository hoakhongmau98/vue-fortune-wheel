// SCSS Variables for Wheel of Fortune application
// Design tokens and configuration values

// Colors
$primary-colors: (
  50: #eff6ff,
  100: #dbeafe,
  200: #bfdbfe,
  300: #93c5fd,
  400: #60a5fa,
  500: #3b82f6,
  600: #2563eb,
  700: #1d4ed8,
  800: #1e40af,
  900: #1e3a8a,
  950: #172554
);

$wheel-colors: (
  blue: #45ace9,
  red: #dd3832,
  yellow: #fef151,
  green: #4ade80,
  purple: #a855f7,
  orange: #fb923c
);

$gray-colors: (
  50: #f9fafb,
  100: #f3f4f6,
  200: #e5e7eb,
  300: #d1d5db,
  400: #9ca3af,
  500: #6b7280,
  600: #4b5563,
  700: #374151,
  800: #1f2937,
  900: #111827,
  950: #030712
);

// Typography
$font-families: (
  sans: ('Inter', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif),
  display: ('Poppins', system-ui, sans-serif),
  mono: ('JetBrains Mono', 'Fira Code', 'Monaco', 'Cascadia Code', monospace)
);

$font-sizes: (
  xs: 0.75rem,
  sm: 0.875rem,
  base: 1rem,
  lg: 1.125rem,
  xl: 1.25rem,
  '2xl': 1.5rem,
  '3xl': 1.875rem,
  '4xl': 2.25rem,
  '5xl': 3rem,
  '6xl': 3.75rem
);

$font-weights: (
  light: 300,
  normal: 400,
  medium: 500,
  semibold: 600,
  bold: 700,
  extrabold: 800
);

$line-heights: (
  none: 1,
  tight: 1.25,
  snug: 1.375,
  normal: 1.5,
  relaxed: 1.625,
  loose: 2
);

// Spacing
$spacing: (
  0: 0,
  1: 0.25rem,
  2: 0.5rem,
  3: 0.75rem,
  4: 1rem,
  5: 1.25rem,
  6: 1.5rem,
  8: 2rem,
  10: 2.5rem,
  12: 3rem,
  16: 4rem,
  20: 5rem,
  24: 6rem,
  32: 8rem,
  40: 10rem,
  48: 12rem,
  56: 14rem,
  64: 16rem
);

// Border radius
$border-radius: (
  none: 0,
  sm: 0.125rem,
  base: 0.25rem,
  md: 0.375rem,
  lg: 0.5rem,
  xl: 0.75rem,
  '2xl': 1rem,
  '3xl': 1.5rem,
  full: 9999px
);

// Shadows
$shadows: (
  sm: 0 1px 2px 0 rgb(0 0 0 / 0.05),
  base: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1),
  md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1),
  lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1),
  xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1),
  '2xl': 0 25px 50px -12px rgb(0 0 0 / 0.25),
  inner: inset 0 2px 4px 0 rgb(0 0 0 / 0.05),
  none: 0 0 #0000
);

// Transitions
$transitions: (
  fast: 150ms,
  normal: 300ms,
  slow: 500ms,
  wheel: 6000ms
);

$easing: (
  linear: linear,
  in: cubic-bezier(0.4, 0, 1, 1),
  out: cubic-bezier(0, 0, 0.2, 1),
  'in-out': cubic-bezier(0.4, 0, 0.2, 1),
  wheel: cubic-bezier(0.36, 0.95, 0.64, 1)
);

// Breakpoints
$breakpoints: (
  sm: 640px,
  md: 768px,
  lg: 1024px,
  xl: 1280px,
  '2xl': 1536px
);

// Z-index
$z-index: (
  auto: auto,
  0: 0,
  10: 10,
  20: 20,
  30: 30,
  40: 40,
  50: 50,
  dropdown: 1000,
  sticky: 1020,
  fixed: 1030,
  modal-backdrop: 1040,
  modal: 1050,
  popover: 1060,
  tooltip: 1070
);

// Wheel-specific variables
$wheel: (
  min-radius: 150px,
  max-radius: 500px,
  default-radius: 250px,
  min-button-width: 80px,
  max-button-width: 200px,
  default-button-width: 140px,
  min-font-size: 16px,
  max-font-size: 60px,
  default-font-size: 34px,
  min-line-height: 16px,
  max-line-height: 40px,
  default-line-height: 20px,
  min-border-width: 0px,
  max-border-width: 20px,
  default-border-width: 0px,
  text-radius-ratio: 0.76,
  text-length-limit: 6,
  max-prizes: 12,
  min-prizes: 2
);

// Animation variables
$animations: (
  wheel-spin-duration: 6s,
  button-pulse-duration: 1s,
  prize-reveal-duration: 500ms,
  loading-spin-duration: 1s,
  wheel-glow-duration: 2s
);

// Accessibility variables
$accessibility: (
  focus-outline-width: 2px,
  focus-outline-offset: 2px,
  reduced-motion-duration: 0ms,
  high-contrast-border-width: 2px
);

// Performance variables
$performance: (
  will-change-properties: (transform, opacity),
  gpu-accelerated-properties: (transform, opacity, filter),
  debounce-delay: 100ms,
  throttle-delay: 16ms
);

// Mixins
@mixin wheel-container {
  position: relative;
  display: inline-block;
  user-select: none;
}

@mixin wheel-wheel {
  position: relative;
  transition: transform map-get($transitions, wheel) map-get($easing, wheel);
  will-change: transform;
}

@mixin wheel-button {
  border: none;
  background: none;
  cursor: pointer;
  transition: all map-get($transitions, normal) map-get($easing, out);
  border-radius: map-get($border-radius, full);
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: inherit;
}

@mixin wheel-canvas {
  display: block;
  max-width: 100%;
  height: auto;
  border-radius: map-get($border-radius, full);
  box-shadow: map-get($shadows, lg);
  transition: box-shadow map-get($transitions, normal) map-get($easing, out);
}

@mixin responsive($breakpoint) {
  @media (min-width: map-get($breakpoints, $breakpoint)) {
    @content;
  }
}

@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

@mixin high-contrast {
  @media (prefers-contrast: high) {
    @content;
  }
}

@mixin print {
  @media print {
    @content;
  }
}

// Functions
@function get-color($color-map, $key) {
  @return map-get($color-map, $key);
}

@function get-spacing($size) {
  @return map-get($spacing, $size);
}

@function get-font-size($size) {
  @return map-get($font-sizes, $size);
}

@function get-shadow($level) {
  @return map-get($shadows, $level);
}

@function get-transition($type) {
  @return map-get($transitions, $type);
}

@function get-easing($type) {
  @return map-get($easing, $type);
}

@function get-wheel-config($key) {
  @return map-get($wheel, $key);
}

// Utility classes
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin focus-visible {
  outline: map-get($accessibility, focus-outline-width) solid get-color($primary-colors, 500);
  outline-offset: map-get($accessibility, focus-outline-offset);
}

@mixin loading-spinner {
  width: 40px;
  height: 40px;
  border: 4px solid rgba(255, 255, 255, 0.3);
  border-top: 4px solid get-color($primary-colors, 500);
  border-radius: map-get($border-radius, full);
  animation: spin map-get($animations, loading-spin-duration) linear infinite;
}